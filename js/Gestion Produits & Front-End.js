
/**
 * SCRIPT CENTRAL: Gestionnaire de Cat√©gories
 * Description: G√®re la liste des cat√©gories et les informations pour contacter leurs scripts respectifs.
 * A d√©ployer en tant qu'application web avec acc√®s "Tous les utilisateurs".
 */

// --- CONFIGURATION ---
const ADMIN_SPREADSHEET_ID = "1kTQsUgcvcWxJNgHuITi4nlMhAqwyVAMhQbzIMIODcBg";
const CENTRAL_SHEET_ID = "1kTQsUgcvcWxJNgHuITi4nlMhAqwyVAMhQbzIMIODcBg"; // IMPORTANT: ID de la feuille centrale
const DEFAULT_LOGO_URL = "https://i.postimg.cc/6QZBH1JJ/Sleek-Wordmark-Logo-for-ABMCY-MARKET.png"; // NOUVEAU: URL du logo par d√©faut

// NOUVEAU: Configuration centrale des attributs par cat√©gorie, copi√©e depuis le template.
const CATEGORY_CONFIG = {
  "Chaussures": ["Pointure", "Couleur", "Mati√®re", "Type", "Genre", "Semelle", "Usage"],
  "V√™tements": ["Taille", "Coupe", "Mati√®re", "Couleur", "Genre", "Saison", "Style"],
  "Sacs": ["Volume", "Type", "Mati√®re", "Couleur", "Usage", "Genre"],
  "Montres": ["Type", "Bracelet", "Cadran", "Marque", "√âtanch√©it√©", "Genre"],
  "Lunettes": ["Type", "Forme", "Couleur", "Protection UV", "Mati√®re", "Genre"],
  "Bijoux": ["Type", "M√©tal", "Pierre", "Taille", "Genre", "Finition"],
  "Accessoires": ["Dimensions", "Compatibilit√©", "Mati√®re", "Usage", "Couleur", "Poids"],
  "Beaut√© & soins": ["Type de peau", "Ingr√©dients", "Format", "Parfum", "Volume", "Genre"],
  "Parfums": ["Famille olfactive", "Notes", "Intensit√©", "Format", "Genre"],
  "√âlectronique": ["Marque", "Mod√®le", "Capacit√©", "Connectivit√©", "Compatibilit√©", "Garantie"],
  "Informatique": ["Processeur", "RAM", "Stockage", "√âcran", "OS", "Connectivit√©", "Usage"],
  "Gaming": ["Plateforme", "Genre", "√âditeur", "PEGI", "Multijoueur", "√âdition"],
  "Livres": ["Auteur", "Genre", "Langue", "Format", "Pages", "ISBN", "√âdition"],
  "Musique": ["Artiste", "Genre", "Format", "Dur√©e", "Label"],
  "Films & s√©ries": ["Titre", "Genre", "Format", "Langue", "Dur√©e", "R√©alisateur", "Acteurs"],
  "Jeux & jouets": ["√Çge", "Type", "Mati√®re", "Dimensions", "Marque", "√âducatif/cr√©atif"],
  "Sport & fitness": ["Usage", "Taille", "Poids", "Niveau", "Mati√®re", "Pliable", "Intensit√©"],
  "Meubles": ["Dimensions", "Mati√®re", "Style", "Usage", "Couleur", "Montage"],
  "D√©coration": ["Type", "Mati√®re", "Couleur", "Style", "Usage"],
  "Jardin": ["Type", "Usage", "Dimensions", "Mati√®re", "Saison"],
  "Outillage": ["Type", "Puissance", "Usage", "Alimentation", "Marque", "S√©curit√©"],
  "Automobile": ["Marque", "Mod√®le", "Ann√©e", "Carburant", "Transmission", "Couleur"],
  "Moto & v√©lo": ["Type", "Taille", "Usage", "Marque", "Vitesse", "Accessoires inclus"],
  "Alimentation": ["Poids", "Ingr√©dients", "Origine", "Date limite", "Labels", "Type"],
  "Literie": ["Taille", "Mati√®re", "Fermet√©", "√âpaisseur", "Traitement anti-acariens"],
  "Rideaux & stores": ["Type", "Dimensions", "Mati√®re", "Opacit√©", "Fixation"],
  "Luminaires": ["Type", "Style", "Puissance", "Source", "Installation"],
  "Vaisselle": ["Type", "Mati√®re", "Nombre de pi√®ces", "Usage", "Compatibilit√© lave-vaisselle"],
  "Ustensiles de cuisine": ["Type", "Mati√®re", "Usage", "Ergonomie", "Compatibilit√©"],
  "Rangement": ["Type", "Dimensions", "Mati√®re", "Capacit√©", "Empilable"],
  "Salle de bain": ["Type", "Mati√®re", "Dimensions", "Installation", "Usage"],
  "Cuisine √©quip√©e": ["Type", "Dimensions", "Finition", "√âlectrom√©nagers inclus"],
  "Climatisation": ["Type", "Puissance", "Surface couverte", "Consommation", "Installation"],
  "Chauffage": ["Type", "Puissance", "Technologie", "S√©curit√©", "Mobilit√©"],
  "Instruments de musique": ["Type", "Marque", "Mati√®re", "Niveau", "Accessoires inclus"],
  "Mat√©riel artistique": ["Type", "Format", "Couleur", "Technique", "Usage"],
  "Loisirs cr√©atifs": ["Type", "Niveau", "Mati√®re", "Th√®me", "√Çge"],
  "Couture & tricot": ["Type", "Mati√®re", "Couleur", "Format", "Compatibilit√© machine"],
  "Mod√©lisme": ["Type", "√âchelle", "Mat√©riau", "Niveau", "Motorisation"],
  "Photographie": ["Type", "R√©solution", "Format", "Connectivit√©", "Accessoires"],
  "Scrapbooking": ["Type", "Format", "Th√®me", "Couleur", "Nombre d‚Äô√©l√©ments"],
  "Calligraphie": ["Type", "Pointe", "Encre", "Format", "Usage"],
  "Fournitures scolaires": ["Type", "Format", "Niveau", "Mati√®re", "Compatibilit√©"],
  "Jeux √©ducatifs": ["√Çge", "Mati√®re", "Th√®me", "Niveau", "Nombre de joueurs"],
  "Livres jeunesse": ["√Çge", "Genre", "Format", "Langue", "Illustration"],
  "Mobilier enfant": ["Type", "Dimensions", "S√©curit√©", "Mati√®re", "√âvolutif"],
  "V√™tements b√©b√©": ["Taille", "Mati√®re", "S√©curit√©", "Saison", "Genre"],
  "Pu√©riculture": ["Type", "S√©curit√©", "√Çge", "Format", "Compatibilit√©"],
  "Yoga & m√©ditation": ["Type", "Mati√®re", "Niveau", "Usage", "Format"],
  "Compl√©ments alimentaires": ["Type", "Ingr√©dients", "Posologie", "Certification", "Format"],
  "Huiles essentielles": ["Plante", "Usage", "Format", "Certification", "Origine"],
  "Mat√©riel m√©dical": ["Type", "Usage", "Format", "Pr√©cision", "Homologation"],
  "Produits d‚Äôhygi√®ne": ["Type", "Format", "Ingr√©dients", "Usage", "Certification"],
  "Soins capillaires": ["Type", "Format", "Ingr√©dients", "Usage", "Texture"],
  "Mat√©riaux": ["Type", "Dimensions", "Mati√®re", "Usage", "Certification"],
  "√âquipements de chantier": ["Type", "Puissance", "S√©curit√©", "Mobilit√©", "Usage"],
  "√âlectricit√©": ["Type", "Tension", "Compatibilit√©", "Installation", "S√©curit√©"],
  "Plomberie": ["Type", "Diam√®tre", "Mati√®re", "Installation", "Usage"],
  "Quincaillerie": ["Type", "Dimensions", "Mati√®re", "Usage", "R√©sistance"],
  "√âquipements de protection": ["Type", "Norme", "Taille", "Usage", "Mati√®re"],
  "Bagages": ["Type", "Dimensions", "Mati√®re", "Roues", "S√©curit√©"],
  "Accessoires de voyage": ["Type", "Usage", "Format", "Compatibilit√©", "S√©curit√©"],
  "Guides touristiques": ["Destination", "Langue", "Format", "√âdition", "Th√©matique"],
  "Camping": ["Type", "Dimensions", "Mati√®re", "Usage", "Saison"],
  "Randonn√©e": ["Type", "Niveau", "Mati√®re", "Poids", "Imperm√©abilit√©"],
  "Mobilit√© urbaine": ["Type", "Autonomie", "Vitesse", "Poids", "Pliable"],
};

// --- GESTIONNAIRE DE MENU ---
function onOpen() {
  SpreadsheetApp.getUi()
      .createMenu('ABMCY Market [ADMIN]')
      .addItem('üì¶ G√©rer le Catalogue', 'showAdminInterface')
      .addSeparator()
      .addItem('‚öôÔ∏è Initialiser la feuille centrale', 'setupCentralSheet')
      .addToUi();
}

function showAdminInterface() {
  const html = HtmlService.createHtmlOutputFromFile('AdminInterface').setTitle('Panneau Admin Produits');
  SpreadsheetApp.getUi().showSidebar(html);
}

/**
 * Fournit la liste des cat√©gories au front-end (AdminInterface.html).
 */
function doGet(e) {
  try {
    const action = e.parameter.action;

    // CORRECTION: G√©rer l'invalidation du cache appel√©e par les feuilles de cat√©gorie
    if (action === 'invalidateCache') {
      const cache = PropertiesService.getScriptProperties();
      const newVersion = new Date().getTime().toString();
      cache.setProperty('cacheVersion', newVersion);
      return createJsonResponse({ success: true, message: `Cache invalid√©. Nouvelle version: ${newVersion}` });
    }

    // Pour l'action 'getPublicData' ou par d√©faut, on renvoie la liste des cat√©gories et la version du cache.
    // Le panneau d'administration utilise getCategoriesWithProductCounts() directement via google.script.run.
    const categories = getCategories(); // Utiliser la version simple sans d√©compte pour l'API publique
    return createJsonResponse({ success: true, data: categories, cacheVersion: PropertiesService.getScriptProperties().getProperty('cacheVersion') });

  } catch (error) {
    return createJsonResponse({ success: false, error: error.message });
  }
}

/**
 * R√©cup√®re la liste simple des cat√©gories.
 */
function getCategories() {
  const ss = SpreadsheetApp.openById(CENTRAL_SHEET_ID);
  const sheet = ss.getSheetByName("Cat√©gories");
  if (!sheet) throw new Error("La feuille 'Cat√©gories' est introuvable.");

  const data = sheet.getDataRange().getValues();
  const headers = data.shift();
  
  return data.map(row => {
    const obj = {};
    headers.forEach((header, index) => {
      obj[header] = row[index];
    });
    return obj;
  });
}

/**
 * R√©cup√®re la liste des cat√©gories depuis la feuille de calcul centrale.
 */
function getCategoriesWithProductCounts() {
  const ss = SpreadsheetApp.openById(CENTRAL_SHEET_ID);
  const sheet = ss.getSheetByName("Cat√©gories");
  if (!sheet) throw new Error("La feuille 'Cat√©gories' est introuvable.");

  const data = sheet.getDataRange().getValues();
  const headers = data.shift();
  
  const categories = data.map(row => {
    const obj = {};
    headers.forEach((header, index) => {
      obj[header] = row[index];
    });
    return obj;
  });

  // Cr√©er un tableau de requ√™tes pour UrlFetchApp.fetchAll
  const requests = categories.map(category => ({
    url: `${category.ScriptURL}?action=getProductCount`,
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': 'Bearer ' + ScriptApp.getIdentityToken()
    }
  }));

  // Ex√©cuter toutes les requ√™tes en parall√®le
  const responses = UrlFetchApp.fetchAll(requests);

  // R√©cup√©rer le nombre de produits pour chaque cat√©gorie
  const categoriesWithCounts = categories.map((category, index) => {
    const response = responses[index];
    if (response.getResponseCode() === 200) {
      const result = JSON.parse(response.getContentText());
      category.ProductCount = result.success ? result.count : 'Erreur';
    } else {
      category.ProductCount = 'Erreur API';
    }
    return category;
  });

  return categoriesWithCounts;
}

/**
 * R√©cup√®re TOUS les produits de TOUTES les cat√©gories.
 * Appel√©e par l'UI via google.script.run ou par l'API.
 */
function getAllProducts(categories) {
  // Si les cat√©gories ne sont pas fournies, on les r√©cup√®re.
  if (!categories) {
    categories = getCategories();
  }

  let allProducts = [];

  // Utilise UrlFetchApp.fetchAll pour appeler tous les scripts de cat√©gorie en parall√®le
  const requests = categories.filter(c => c.ScriptURL).map(category => ({
    url: `${category.ScriptURL}?action=getProducts`,
    method: 'get',
    muteHttpExceptions: true
  }));

  const responses = UrlFetchApp.fetchAll(requests);

  responses.forEach((response, index) => {
    if (response.getResponseCode() === 200) {
      const result = JSON.parse(response.getContentText());
      if (result.success && result.data) {
        allProducts = allProducts.concat(result.data);
      }
    } else {
      Logger.log(`Erreur lors de la r√©cup√©ration des produits pour la cat√©gorie via l'admin UI.`);
    }
  });

  return allProducts;
}

/**
 * Met √† jour un produit en appelant le script de la bonne cat√©gorie.
 * Appel√©e par l'UI via google.script.run.
 */
function updateProduct(productData) {
  const categories = getCategoriesWithProductCounts();
  const targetCategory = categories.find(c => c.NomCategorie === productData.Cat√©gorie);

  if (!targetCategory || !targetCategory.ScriptURL) {
    throw new Error(`Cat√©gorie ou URL de script introuvable pour "${productData.Cat√©gorie}"`);
  }

  const payload = {
    action: 'updateProduct',
    data: productData
  };

  const response = UrlFetchApp.fetch(targetCategory.ScriptURL, {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify(payload),
    headers: {
      'Authorization': 'Bearer ' + ScriptApp.getIdentityToken()
    }
  });

  return JSON.parse(response.getContentText());
}

/**
 * D√©clenche l'archivage des produits √©puis√©s dans toutes les cat√©gories.
 */
function archiveAllOutOfStock() {
  const categories = getCategoriesWithProductCounts();
  const requests = categories.map(category => ({
    url: category.ScriptURL,
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify({ action: 'archiveOutOfStock' }),
    muteHttpExceptions: true,
    headers: {
      'Authorization': 'Bearer ' + ScriptApp.getIdentityToken()
    }
  }));

  const responses = UrlFetchApp.fetchAll(requests);
  // On pourrait agr√©ger les r√©sultats, mais pour l'instant on lance juste les t√¢ches.
  return { success: true, message: "T√¢che d'archivage lanc√©e pour toutes les cat√©gories." };
}

// --- UTILITAIRES ---

function createJsonResponse(data) {
  return ContentService.createTextOutput(JSON.stringify(data))
    .setMimeType(ContentService.MimeType.JSON);
}

/**
 * Utilitaire pour convertir une feuille en JSON.
 */
function sheetToJSON(sheet) {
  if (!sheet || sheet.getLastRow() < 2) return [];
  const data = sheet.getDataRange().getValues();
  const headers = data.shift();
  return data.map(row => {
    const obj = {};
    headers.forEach((header, index) => {
      if (header) {
        obj[header] = row[index];
      }
    });
    return obj;
  });
}

/**
 * Initialise la feuille de calcul centrale.
 */
function setupCentralSheet() {
  const ss = SpreadsheetApp.openById(CENTRAL_SHEET_ID);
  let sheet = ss.getSheetByName("Cat√©gories");
  if (!sheet) {
    sheet = ss.insertSheet("Cat√©gories");
  }
  sheet.clear();
  // NOUVEAU: Ajout de ImageURL pour le front-end
  const headers = ["IDCategorie", "NomCategorie", "SheetID", "ScriptURL", "ImageURL"];
  sheet.appendRow(headers);
  sheet.setFrozenRows(1);
  sheet.getRange(1, 1, 1, headers.length).setFontWeight("bold");
  
  // NOUVEAU: Remplissage automatique √† partir de CATEGORY_CONFIG
  const categoriesToInsert = Object.keys(CATEGORY_CONFIG).sort();
  const rows = categoriesToInsert.map((catName, index) => {
    const catId = `CAT-${String(index + 1).padStart(3, '0')}`;
    const placeholderSheetId = `REMPLIR_ID_FEUILLE_${catName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`;
    const placeholderScriptUrl = `REMPLIR_URL_SCRIPT_${catName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`;
    return [catId, catName, placeholderSheetId, placeholderScriptUrl, DEFAULT_LOGO_URL]; // CORRECTION: Utiliser le logo par d√©faut
  });

  if (rows.length > 0) {
    sheet.getRange(2, 1, rows.length, headers.length).setValues(rows);
  }

  SpreadsheetApp.getUi().alert(`Initialisation termin√©e. ${rows.length} cat√©gories ont √©t√© ajout√©es √† la feuille "Cat√©gories".`);
}